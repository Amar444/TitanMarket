/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package titanmarket;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Amar Tursic
 */
public class MarketFrame extends javax.swing.JFrame {

    private DefaultTableModel myModel;
    private DefaultTableModel myModel2;
    private DefaultTableModel myModel3;
    public ArrayList<Item> allItems;
    public ArrayList<tableList> tableItems;
    public ArrayList<Calculator> calcItems;

    //Constructor
    public MarketFrame() {
        initComponents();
        myModel = (DefaultTableModel) tableList.getModel();
        myModel2 = (DefaultTableModel) itemTable.getModel();
        myModel3 = (DefaultTableModel) calcTable.getModel();
        initializeFrame();
        getDate();
        tableItems = new ArrayList<tableList>();
        calcItems = new ArrayList<Calculator>();
        fillTable();
        fillItemTable();
    }

    private void initializeFrame() {
        myModel.setRowCount(0);
        myModel2.setRowCount(0);
        myModel3.setRowCount(0);
        allItems = new ArrayList<Item>();
        fillItemCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel9 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableList = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        itemCombo = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        priceField = new javax.swing.JTextField();
        amountField = new javax.swing.JTextField();
        dagField = new javax.swing.JTextField();
        maandField = new javax.swing.JTextField();
        jaarField = new javax.swing.JTextField();
        boughtBtn = new javax.swing.JButton();
        soldBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        deleteBtn = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        filterMonth = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        addItemField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        addItemBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        itemTable = new javax.swing.JTable();
        deleteItemBtn = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        calcTable = new javax.swing.JTable();
        itemCombo2 = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        priceFieldCalc = new javax.swing.JTextField();
        amountFieldCalc = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        budgetField = new javax.swing.JTextField();
        addItemCalc = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        deleteCalcRow = new javax.swing.JButton();
        budgetAmountCalc = new javax.swing.JLabel();
        itemAmountCalc = new javax.swing.JLabel();
        budgetLeftCalc = new javax.swing.JLabel();
        resetCalc = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        profitToday = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        profitMonth = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        profitTotal = new javax.swing.JLabel();
        Backgroundlbl = new javax.swing.JLabel();

        jLabel9.setText("jLabel9");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Titan Market");
        setBackground(new java.awt.Color(204, 204, 204));
        setMinimumSize(new java.awt.Dimension(817, 385));
        setPreferredSize(new java.awt.Dimension(817, 418));
        getContentPane().setLayout(null);

        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });
        jTabbedPane1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseDragged(evt);
            }
        });

        jPanel2.setMinimumSize(new java.awt.Dimension(32767, 32767));
        jPanel2.setName(""); // NOI18N
        jPanel2.setOpaque(false);

        tableList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Sale Date", "State", "Item Name", "Amount", "Total Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableList.setOpaque(false);
        jScrollPane1.setViewportView(tableList);
        tableList.getColumnModel().getColumn(0).setMinWidth(80);
        tableList.getColumnModel().getColumn(0).setPreferredWidth(80);
        tableList.getColumnModel().getColumn(0).setMaxWidth(80);
        tableList.getColumnModel().getColumn(1).setMinWidth(60);
        tableList.getColumnModel().getColumn(1).setPreferredWidth(60);
        tableList.getColumnModel().getColumn(1).setMaxWidth(60);
        tableList.getColumnModel().getColumn(2).setResizable(false);
        tableList.getColumnModel().getColumn(3).setMinWidth(55);
        tableList.getColumnModel().getColumn(3).setPreferredWidth(55);
        tableList.getColumnModel().getColumn(3).setMaxWidth(55);
        tableList.getColumnModel().getColumn(4).setPreferredWidth(30);

        jPanel4.setForeground(new java.awt.Color(204, 204, 204));
        jPanel4.setMaximumSize(new java.awt.Dimension(216, 248));
        jPanel4.setMinimumSize(new java.awt.Dimension(216, 248));
        jPanel4.setOpaque(false);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Date:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Item:");

        itemCombo.setMaximumRowCount(10);
        itemCombo.setMaximumSize(new java.awt.Dimension(28, 20));
        itemCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemComboActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Price:");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Amount:");

        dagField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dagFieldActionPerformed(evt);
            }
        });

        boughtBtn.setFont(new java.awt.Font("Meiryo", 0, 14)); // NOI18N
        boughtBtn.setText("Bought");
        boughtBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                boughtBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                boughtBtnMouseExited(evt);
            }
        });
        boughtBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boughtBtnActionPerformed(evt);
            }
        });

        soldBtn.setFont(new java.awt.Font("Meiryo", 0, 14)); // NOI18N
        soldBtn.setText("Sold");
        soldBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                soldBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(boughtBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(soldBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addComponent(dagField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(maandField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jaarField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(itemCombo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(amountField, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(priceField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(dagField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maandField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jaarField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(itemCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(priceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(amountField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(33, 33, 33)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boughtBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(soldBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Bought or Sold");

        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        jPanel1.setOpaque(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Filter by month:");

        filterMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterMonthActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(filterMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(filterMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 557, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Overview", jPanel2);

        jPanel3.setOpaque(false);

        addItemField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addItemFieldActionPerformed(evt);
            }
        });

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Add Item");

        addItemBtn.setText("Add new item");
        addItemBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addItemBtnActionPerformed(evt);
            }
        });

        itemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ItemName", "Amount in stock"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(itemTable);
        itemTable.getColumnModel().getColumn(0).setMinWidth(225);
        itemTable.getColumnModel().getColumn(0).setPreferredWidth(225);
        itemTable.getColumnModel().getColumn(0).setMaxWidth(225);
        itemTable.getColumnModel().getColumn(1).setResizable(false);

        deleteItemBtn.setText("Delete Item");
        deleteItemBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteItemBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(addItemField, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addItemBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteItemBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(179, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addItemField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addItemBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(deleteItemBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Manage items", jPanel3);

        jPanel6.setOpaque(false);

        calcTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Item name", "Amount", "price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        calcTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                calcTableKeyReleased(evt);
            }
        });
        jScrollPane3.setViewportView(calcTable);
        calcTable.getColumnModel().getColumn(0).setResizable(false);
        calcTable.getColumnModel().getColumn(1).setMinWidth(55);
        calcTable.getColumnModel().getColumn(1).setPreferredWidth(55);
        calcTable.getColumnModel().getColumn(1).setMaxWidth(55);
        calcTable.getColumnModel().getColumn(2).setMinWidth(120);
        calcTable.getColumnModel().getColumn(2).setPreferredWidth(120);
        calcTable.getColumnModel().getColumn(2).setMaxWidth(120);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Item:");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Price:");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Amount:");

        priceFieldCalc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceFieldCalcActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Budget:");

        budgetField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                budgetFieldActionPerformed(evt);
            }
        });

        addItemCalc.setText("Add Item");
        addItemCalc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addItemCalcActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Your budget:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Budget left:");

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Items cost:");

        deleteCalcRow.setText("Delete Item");
        deleteCalcRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteCalcRowActionPerformed(evt);
            }
        });

        budgetAmountCalc.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        budgetAmountCalc.setForeground(new java.awt.Color(255, 255, 255));
        budgetAmountCalc.setText("0");

        itemAmountCalc.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        itemAmountCalc.setForeground(new java.awt.Color(255, 255, 255));
        itemAmountCalc.setText("0");

        budgetLeftCalc.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        budgetLeftCalc.setForeground(new java.awt.Color(255, 255, 255));
        budgetLeftCalc.setText("0");

        resetCalc.setText("Reset All");
        resetCalc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetCalcActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(amountFieldCalc))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15)
                            .addComponent(jLabel17))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(itemCombo2, 0, 118, Short.MAX_VALUE)
                            .addComponent(priceFieldCalc)
                            .addComponent(budgetField)))
                    .addComponent(addItemCalc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(32, 32, 32)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteCalcRow, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel18)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(budgetLeftCalc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(itemAmountCalc, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                            .addComponent(budgetAmountCalc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(resetCalc, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(budgetField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemCombo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(priceFieldCalc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(amountFieldCalc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addItemCalc, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(resetCalc, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(budgetAmountCalc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(itemAmountCalc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(budgetLeftCalc, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteCalcRow, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        jTabbedPane1.addTab("Calculator", jPanel6);

        getContentPane().add(jTabbedPane1);
        jTabbedPane1.setBounds(10, 10, 814, 356);

        jPanel5.setBackground(new java.awt.Color(0, 0, 0));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Profits today:");

        profitToday.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        profitToday.setForeground(new java.awt.Color(255, 255, 255));
        profitToday.setText("0");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Profits this month:");

        profitMonth.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        profitMonth.setForeground(new java.awt.Color(255, 255, 255));
        profitMonth.setText("0");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Profits total:");

        profitTotal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        profitTotal.setForeground(new java.awt.Color(255, 255, 255));
        profitTotal.setText("0");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addComponent(jLabel2)
                .addGap(5, 5, 5)
                .addComponent(profitToday, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(13, 13, 13)
                .addComponent(profitMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(profitTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
            .addComponent(profitToday, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(profitMonth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(profitTotal, javax.swing.GroupLayout.DEFAULT_SIZE, 19, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel5);
        jPanel5.setBounds(0, 370, 820, 20);

        Backgroundlbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/titanmarket/Images/Capture.jpg"))); // NOI18N
        Backgroundlbl.setPreferredSize(new java.awt.Dimension(817, 414));
        getContentPane().add(Backgroundlbl);
        Backgroundlbl.setBounds(0, -10, 820, 400);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addItemFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addItemFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addItemFieldActionPerformed

    private void dagFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dagFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dagFieldActionPerformed

    private void boughtBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boughtBtnActionPerformed

        insertRow("Bought");

    }//GEN-LAST:event_boughtBtnActionPerformed

    private void soldBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_soldBtnActionPerformed
        // TODO add your handling code here:
        insertRow("Sold");

    }//GEN-LAST:event_soldBtnActionPerformed

    private void itemComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemComboActionPerformed
        // TODO add your handling code here: 
    }//GEN-LAST:event_itemComboActionPerformed

    private void addItemBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addItemBtnActionPerformed
        // TODO add your handling code here:
        Item item = new Item(addItemField.getText());
        if (addItemField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter an item name");
        } else {
            allItems.add(item);
            addItemField.setText("");
            fillItemTable();
        }
    }//GEN-LAST:event_addItemBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
        try {
            int row = tableList.getSelectedRow();
            int delete = tableItems.size() - 1 - row;
            tableItems.remove(delete);
            fillTable();
        } catch (IndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Please select a row before you try to remove something.");
        }

    }//GEN-LAST:event_deleteBtnActionPerformed

    private void deleteItemBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteItemBtnActionPerformed
        // TODO add your handling code here:
        try {
            int row = itemTable.getSelectedRow();
            String tableItemName = (String) myModel2.getValueAt(row, 0);

            for (Item listItems : allItems) {
                if (tableItemName.equals(listItems.itemName)) {
                    allItems.remove(listItems);
                    break;
                }
            }
            fillItemTable();
        } catch (ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Please select a row before you try to remove something.");
        }

    }//GEN-LAST:event_deleteItemBtnActionPerformed

    private void filterMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterMonthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filterMonthActionPerformed

    private void boughtBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boughtBtnMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_boughtBtnMouseEntered

    private void boughtBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boughtBtnMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_boughtBtnMouseExited

    private void jTabbedPane1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseDragged
        // TODO add your handling code here:
        fillItemCombo();
        fillItemTable();
    }//GEN-LAST:event_jTabbedPane1MouseDragged

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        // TODO add your handling code here:
        fillItemCombo();
        fillItemTable();
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void budgetFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_budgetFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_budgetFieldActionPerformed

    private void priceFieldCalcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceFieldCalcActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceFieldCalcActionPerformed

    private void addItemCalcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addItemCalcActionPerformed
        // TODO add your handling code here:
        if (priceFieldCalc.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please fill in the price or amount.");
        } else if (itemCombo2.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Please select an item.");
        } else if(budgetField.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter your budget");
            
        } else {
            try {
                int totalPrice = getAmountFromFieldCalc() * getPricefromFieldCalc();
                calcItems.add(new Calculator(getSelectedItemFromComboCalc(), getAmountFromFieldCalc(), totalPrice));
                budgetAmountCalc.setText(Integer.toString(getBudgetField()));
                fillCalcTable();
                priceFieldCalc.setText("");
                amountFieldCalc.setText("");
                //
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Only use numbers in the price or amount field.");
            }
        }
    }//GEN-LAST:event_addItemCalcActionPerformed

    private void deleteCalcRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteCalcRowActionPerformed
        // TODO add your handling code here:
        try {
            int row = calcTable.getSelectedRow();
            calcItems.remove(row);
            fillCalcTable();
        } catch (IndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Please select a row before you try to remove something.");
        }
    }//GEN-LAST:event_deleteCalcRowActionPerformed

    private void resetCalcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetCalcActionPerformed
        // TODO add your handling code here:
        calcItems = new ArrayList<Calculator>();
        fillCalcTable();
    }//GEN-LAST:event_resetCalcActionPerformed

    private void calcTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_calcTableKeyReleased
        // TODO add your handling code here:
        int row = calcTable.getSelectedRow();
        if (calcItems.size() > 0) {
            
            try {
                int tableData = (Integer) myModel3.getValueAt(row, 1);
            } catch (ClassCastException e) {
                String tableData = (String) myModel3.getValueAt(row, 1);                
                Calculator target = calcItems.get(row);
                int oldPriceEach;
                oldPriceEach = target.getPriceCalc() / target.getAmountCalc();
                
                target.setPriceCalc(Integer.parseInt(tableData) * oldPriceEach);
                target.setAmountCalc(Integer.parseInt(tableData));
            }
        }
        fillCalcTable();
    }//GEN-LAST:event_calcTableKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MarketFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MarketFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MarketFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MarketFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MarketFrame mf = new MarketFrame();
                mf.setVisible(true);
                mf.setResizable(false);
                mf.setLocationRelativeTo(null);
            }
        });
    }

    private void getDate() {
        Calendar cal = Calendar.getInstance();  // Create new calendar instance      
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy"); //Create format for day : Day

        String datum = dateFormat.format(cal.getTime());
        String dag = datum.substring(0, 2);
        String maand = datum.substring(3, 5);
        String jaar = datum.substring(6, 10);

        dagField.setText(dag);
        maandField.setText(maand);
        jaarField.setText(jaar);
    }

    private void fillItemCombo() {
        itemCombo.removeAllItems();
        itemCombo2.removeAllItems();
        for (Item item : allItems) {
            itemCombo.addItem(item.getItemName());
            itemCombo2.addItem(item.getItemName());
        }
    }

    private void fillItemTable() {
        //Adds items into table (second tab)
        myModel2.setRowCount(0);
        for (Item ilist : allItems) {
            myModel2.addRow(new Object[]{ilist.itemName, ilist.stockAmount});
        }
    }

    private void fillCalcTable() {
        myModel3.setRowCount(0);
        int itemsCostCalc = 0;
        int budgetLeft = 0;

       itemAmountCalc.setText(String.valueOf(CalculateItemCost()));
       budgetLeftCalc.setText(String.valueOf(CalculateBudgetLeft()));
     
        for (Calculator calc : calcItems) {
            myModel3.addRow(new Object[]{calc.itemNameCalc, calc.amountCalc, calc.priceCalc});
        }
        
        if (budgetLeft < 0) {
            JOptionPane.showMessageDialog(null, "You went over your budget!");
        }
    }

    private void fillTable() {
        myModel.setRowCount(0);
        int totalBought = 0;
        int totalSold = 0;
        int todaySold = 0;
        int todayBought = 0;
        int monthSold = 0;
        int monthBought = 0;


        for (int i = tableItems.size() - 1; i > -1; i--) {

//        for (tableList tlist : tableItems) {
            //Fills te table with all the arraylist items
            myModel.addRow(new Object[]{createDate(tableItems.get(i).dag, tableItems.get(i).maand, tableItems.get(i).jaar), tableItems.get(i).boughtOrSold, tableItems.get(i).itemName, tableItems.get(i).amount, tableItems.get(i).price});

            //TOTAL
            if (tableItems.get(i).boughtOrSold.equals("Bought")) {
                totalBought += tableItems.get(i).price;
            } else if (tableItems.get(i).boughtOrSold.equals("Sold")) {
                totalSold += tableItems.get(i).price;
            }
            //TODAY
            if (getDayFromField() == tableItems.get(i).dag && getMonthFromField() == tableItems.get(i).maand && getYearFromField() == tableItems.get(i).jaar) {
                if (tableItems.get(i).boughtOrSold.equals("Bought")) {
                    todayBought += tableItems.get(i).price;
                } else if (tableItems.get(i).boughtOrSold.equals("Sold")) {
                    todaySold += tableItems.get(i).price;
                }
            }
            //THIS MONTH
            if (getMonthFromField() == tableItems.get(i).maand && getYearFromField() == tableItems.get(i).jaar) {
                if (tableItems.get(i).boughtOrSold.equals("Bought")) {
                    monthBought += tableItems.get(i).price;
                } else if (tableItems.get(i).boughtOrSold.equals("Sold")) {
                    monthSold += tableItems.get(i).price;
                }
            }

        }

        int totalProfit = totalSold - totalBought;
        int todayProfit = todaySold - todayBought;
        int monthProfit = monthSold - monthBought;

        profitTotal.setText(Integer.toString(totalProfit));
        profitToday.setText(Integer.toString(todayProfit));
        profitMonth.setText(Integer.toString(monthProfit));

    }

    public static String createDate(int dag, int maand, int jaar) {
        return createDateNotation(dag) + "-" + createDateNotation(maand) + "-" + jaar;
    }

    public static String createDateNotation(int date) {
        if (date < 10) {
            return "0" + date;
        }
        return String.valueOf(date);
    }

    private void insertRow(String state) {

        try {

            if (state == "Bought" && !itemCombo.getSelectedItem().equals("")) {
                for (Item ilist : allItems) {
                    if (getSelectedItemFromCombo() == ilist.itemName) {
                        ilist.stockAmount = ilist.stockAmount + getAmountFromField();
                        tableItems.add(createRow(state));
                        refreshAll();
                        priceField.setText("");
                        amountField.setText("");
                    }
                }
            } else if (state == "Sold" && !itemCombo.getSelectedItem().equals("")) {
                for (Item ilist : allItems) {
                    if (getSelectedItemFromCombo() == ilist.itemName) {
                        if (getAmountFromField() > ilist.stockAmount) {
                            JOptionPane.showMessageDialog(null, "You don't have that many items to sell!");
                        } else {
                            ilist.stockAmount = ilist.stockAmount - getAmountFromField();
                            tableItems.add(createRow(state));
                            refreshAll();
                            priceField.setText("");
                            amountField.setText("");
                        }
                    }

                }
            }


        } catch (NumberFormatException e) {

            if (priceField.getText().equals("") || amountField.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Please fill in the price or amount.");
            } else {
                JOptionPane.showMessageDialog(null, "Only use numbers in the price or amount field.");
            }
        } catch (NullPointerException c) {
            JOptionPane.showMessageDialog(null, "Please select an item.");
        }
    }

    private void refreshAll() {
        fillItemTable();
        fillTable();
    }

    private int getAmountFromField() {
        return (Integer.parseInt(amountField.getText()));
    }

    private int getDayFromField() {
        return (Integer.parseInt(dagField.getText()));
    }

    private int getMonthFromField() {
        return (Integer.parseInt(maandField.getText()));
    }

    private int getYearFromField() {
        return (Integer.parseInt(jaarField.getText()));
    }

    private String getSelectedItemFromCombo() {

        return String.valueOf(itemCombo.getSelectedItem());
    }

    private int getPriceFromField() {
        return (Integer.parseInt(priceField.getText()));
    }

    private int CalculateTotalInTable() {
        return getPriceFromField() * getAmountFromField();
    }

    private tableList createRow(String state) {
        return new tableList((int) getDayFromField(), (int) getMonthFromField(), (int) getYearFromField(), getSelectedItemFromCombo(), state, (int) getAmountFromField(), (int) CalculateTotalInTable());
    }

    /**
     * CALCULATOR TAB *
     */
    private int getBudgetField() {
        return Integer.parseInt(budgetField.getText());
    }

    private String getSelectedItemFromComboCalc() {
        return String.valueOf(itemCombo2.getSelectedItem());
    }

    private int getPricefromFieldCalc() {
        return Integer.parseInt(priceFieldCalc.getText());
    }

    private int getAmountFromFieldCalc() {
        return Integer.parseInt(amountFieldCalc.getText());
    }

    private int CalculateItemCost() {

        int itemCost = 0;

        for (Calculator calculator : calcItems) {

            itemCost +=  calculator.getPriceCalc();
        }

        return itemCost;
    }

    private int CalculateBudgetLeft() {
        int budgetLeft = 0;

        for (Calculator calculator : calcItems) {
            
            budgetLeft = getBudgetField() - CalculateItemCost();
        }
        
        return budgetLeft;
    }
    /**
     * END CALCULATOR TAB *
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Backgroundlbl;
    private javax.swing.JButton addItemBtn;
    private javax.swing.JButton addItemCalc;
    private javax.swing.JTextField addItemField;
    private javax.swing.JTextField amountField;
    private javax.swing.JTextField amountFieldCalc;
    private javax.swing.JButton boughtBtn;
    private javax.swing.JLabel budgetAmountCalc;
    private javax.swing.JTextField budgetField;
    private javax.swing.JLabel budgetLeftCalc;
    private javax.swing.JTable calcTable;
    private javax.swing.JTextField dagField;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton deleteCalcRow;
    private javax.swing.JButton deleteItemBtn;
    private javax.swing.JComboBox filterMonth;
    private javax.swing.JLabel itemAmountCalc;
    private javax.swing.JComboBox itemCombo;
    private javax.swing.JComboBox itemCombo2;
    private javax.swing.JTable itemTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jaarField;
    private javax.swing.JTextField maandField;
    private javax.swing.JTextField priceField;
    private javax.swing.JTextField priceFieldCalc;
    private javax.swing.JLabel profitMonth;
    private javax.swing.JLabel profitToday;
    private javax.swing.JLabel profitTotal;
    private javax.swing.JButton resetCalc;
    private javax.swing.JButton soldBtn;
    private javax.swing.JTable tableList;
    // End of variables declaration//GEN-END:variables
}
